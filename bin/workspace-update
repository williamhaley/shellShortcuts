#!/usr/bin/env bash

for app in `ls $1`;
	do (
		if [ ! -d "${1}/${app}" ];
		then
			continue
		fi

		cd "$1/$app"
		if [ -d ".git" ];
		then
			# Updates from go modules. Always do a reset unless there are other changed files
			if [[ `git diff --stat --name-only | grep -v "go.mod" | grep -v "go.sum" | wc -l` -eq 0 ]];
			then
				git reset --hard
			fi

			git submodule update --init --recursive > /dev/null 2>&1
			git pull --rebase > /dev/null 2>&1
		fi
	) &
done

wait

for app in `ls $1`;
	do (
		if [ ! -d "${1}/${app}" ];
		then
			continue
		fi

		cd "$1/$app"
		if [ -d ".git" ];
		then
			printf "${app}: "
			git-status
			git isdirty && printfred " dirty"
			git hasstash && printfyellow " stash"

			numbranches=$(git branch | wc -l | sed 's/^ *//;s/ *$//')
			printf "\nbranches: "
			if [ "${numbranches}" -gt "1" ];
			then
				printfcyan "${numbranches}\n"
			else
				printf "${numbranches}\n"
			fi
			echo ""
		fi
	)
done

