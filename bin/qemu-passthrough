#!/usr/bin/env bash

[[ $(id -u) = 0 ]] || { echo "must be root"; exit 1; }

# e.g. qemu-passthrough -m 8192 -d "/dev/disk/by-id/wwn-0x5001b444a63ede57" -n "win10" -p "0e:00.0" -p "0e:00.1"

memory="8192"
disks=()
name=$(uuidgen)
pci=() # IOMMU group addresses
bios=/usr/share/ovmf/x64/OVMF_CODE.fd
bios_vars=/usr/share/ovmf/x64/OVMF_VARS.fd
cdrom=""
options=""
keyboard="/dev/input/by-id/usb-Logitech_USB_Receiver-if02-event-mouse"
mouse="/dev/input/event4"

while getopts "m:d:n:p:c:v" opt; do
	case $opt in
		m) memory="${OPTARG}" ;;
		d) disks+=("${OPTARG}") ;;
		n) name="${OPTARG}" ;;
		p) pci+=("${OPTARG}") ;;
		c) cdrom="${OPTARG}" ;;
		# Add a second, virtual, display besides passthrough GPU to help debug
		v) options+=" -vga qxl"
	esac
done
shift $((OPTIND -1))

if [ -z "${name}" ];
then
	echo "name cannot be empty"
	exit 1
fi

if [ ${#pci[@]} -eq 0 ]; then
	echo "No pci passthrough devices specified..."
	echo "Why use this script and not standard qemu? Quitting!"
	exit 1
fi

# Qemu relies on this script for networking. Feels really weird this isn't
# provided by the OS package...oh well! Needed as of Qemu 3.1.0
cat <<EOF > /etc/qemu-ifup
#!/bin/sh

echo "Executing /etc/qemu-ifup"
echo "Bringing up $1 for bridged mode..."
sudo /usr/bin/ip link set $1 up promisc on
echo "Adding $1 to br0..."
sudo /usr/bin/brctl addif br0 $1
sleep 2
EOF

chmod 750 /etc/qemu-ifup

for device in "${pci[@]}"
do
	vfiobind "0000:${device}"
	options+=" -device vfio-pci,host=${device},multifunction=on"
done

cp "${bios_vars}" "/tmp/${name}.fd"

if [ -n "${cdrom}" ];
then
	options+=" -drive file=${cdrom},media=cdrom"
	options+=" -boot d"
fi

index=2
for disk in "${disks[@]}"
do
	# TODO WFH Gotta admit, I don't understand how/why the sata bus indexing works.
	# Could probably convert this to ahci, or maybe I don't even need all this
	# complexity in the first place. This was just a copy/paste from the qemu
	# command used by virt-manager
	options+=" -drive file="${disk}",format=raw,if=none,id=drive-sata0-0-${index},cache=none,aio=native -device ide-hd,bus=ide.${index},drive=drive-sata0-0-${index},id=sata0-0-${index},write-cache=on"
	index=$((index + 1))
done

# https://www.reddit.com/r/VFIO/comments/5hmvlr/sharing_keyboardmouse_directly_with_spice/db1xztr/
sleep 2

qemu-system-x86_64 \
	-name guest=${name},debug-threads=on \
	-machine pc-q35-3.1,accel=kvm,usb=off,vmport=off,dump-guest-core=off \
	-cpu EPYC,x2apic=on,tsc-deadline=on,hypervisor=on,tsc_adjust=on,cmp_legacy=on,xop=on,fma4=on,tbm=on,perfctr_core=on,virt-ssbd=on,monitor=off,rdseed=off,adx=off,smap=off,clflushopt=off,sha-ni=off,xsavec=off,xgetbv1=off,hv_time,hv_relaxed,hv_vapic,hv_spinlocks=0x1fff,hv_vendor_id=whatever,kvm=off \
	-m ${memory} \
	-smp $(($(nproc) - 1)) \
	-no-user-config \
	-nodefaults \
	-rtc base=localtime,driftfix=slew \
	-global kvm-pit.lost_tick_policy=delay \
	-no-hpet \
	-global ICH9-LPC.disable_s3=1 \
	-global ICH9-LPC.disable_s4=1 \
	-object input-linux,id=kbd1,evdev=${keyboard},grab_all=on,repeat=on \
	-object input-linux,id=mouse1,evdev=${mouse} \
	-device virtio-mouse-pci \
	-device virtio-keyboard-pci \
	-serial none \
	-parallel none \
	$options \
	-drive file=${bios},if=pflash,format=raw,unit=0,readonly=on \
	-drive file=/tmp/${name}.fd,if=pflash,format=raw,unit=1 \
	-device virtio-scsi-pci,id=scsi \
	-sandbox on,obsolete=deny,elevateprivileges=deny,spawn=deny,resourcecontrol=deny \
	-nic user \
	-monitor stdio
